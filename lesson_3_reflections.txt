When would you want to use a remote repository rather than keeping all your work
local?

    A remote repository is needed if you want to share your project with other people
    and/or would like them to collaborate with you.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because GitHub is a public space, your project might be viewed and edited by
    different people at different times. Each new change should be viewed and verified by you
    (as it's your project), but if it's added to your local repository automatically,
    you will lose contol over your own project, which will probably lead to bad
    consequences in the future. 

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    You create a branch when you want to introduce an experimental change which may or
    may not eventually make it to the final project. 
    You can clone a repository from a remote computer or server to your own computer so that
    you could edit it locally. 
    You can create a fork out of an existing GitHub repository if you want to edit it yourself.
    Unlike cloning, forking is a GitHub standalone feature that might look like cloning, but it's
    essentially a different thing. Forking creates a copy of somebody else's repository on GitHub 
    on your own GitHub profile, providing a direct reference to the original author's repo.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It allows you to be able to work on the updated version of the project even if you
    don't have an access to the Internet.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
